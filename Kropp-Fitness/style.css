@font-face {
  font-family: "Heebo";
  src: url("./fonts/Heebo-Light.woff2") format("woff2");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Heebo";
  src: url("./fonts/Heebo-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Yantramanav";
  src: url("./fonts/Yantramanav-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
   Упрощаем работу с изображениями и видео
  */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
   Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  height: 100%;
  /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
  scrollbar-gutter: stable;
}

/**
   Плавный скролл
  */

html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  min-height: 100%;
  /**
     Унифицированный интерлиньяж
    */
  line-height: 1.5;
}

/**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
a:where([class]) {
  display: inline-flex;
}

/**
   Курсор-рука при наведении на элемент
  */
button,
label {
  cursor: pointer;
}

/**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут fill со значением 'none' или начинается с 'url')
  */
:where([fill]:not([fill="none"], [fill^="url"])) {
  fill: currentColor;
}

/**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут stroke со значением 'none')
  */
:where([stroke]:not([stroke="none"], [stroke^="url"])) {
  stroke: currentColor;
}

/**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
svg * {
  transition-property: fill, stroke;
}

/**
   Приведение рамок таблиц в классический 'collapse' вид
  */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
:root {
  --color-dark: #000000;
  --color-light: #ffffff;
  --color-dark-gray: #404040;
  --color-light-gray: #c4c4c4;
  --color-dark-alternative: #131619;

  --border-radius: 30px;
  --border-image: 1px solid var(--color-dark);

  --font-famali-base: "Heebo", sans-serif;
  --font-famali-accent: "Yantramanav", sans-serif;

  --input-height: 54px;

  --container-width: 1300px;
  --container-padding-x: 15px;

  --transition-duration: 0.2s;
  --header-height: 90px;
}

body {
  background-color: var(--color-dark);
  font-family: var(--font-famali-base);
  color: var(--color-light-gray);
  font-weight: 300;
  font-size: 16px;
  line-height: 1.75;
  overflow-x: hidden;
  margin: 0;
  padding: 0;
  overflow-x: hidden;
}
.header-logo-img {
  height: 25px;
  width: 135px;
}
.header {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 35px;
  min-height: var(--header-height);
  column-gap: 20px;
  background-color: var(--color-dark-alternative);
}

.header-menu-list {
  display: flex;
  gap: 50px;
}
a {
  color: var(--color-light);
}
a:hover {
  color: var(--color-light-gray);
}
a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}
.header-menu-link {
  display: inline-flex;
  height: 90px;
  align-items: center;
  text-decoration: none;
  text-transform: uppercase;
  font-size: 12px;
  font-weight: 700;
  letter-spacing: 1.2px;
  column-gap: 7px;
}

.header-menu-link.is-current::after {
  content: "";
  width: 5px;
  height: 5px;
  background-color: currentColor;
  border-radius: 50%;
}
.header-menu-buttons {
  flex-wrap: nowrap;
}
.button {
  border: var(--border-image);
  border-radius: var(--border-radius);
  white-space: nowrap;
  font-family: var(--font-famali-base);
  text-transform: uppercase;
}
.button:hover {
  transition-duration: var(--transition-duration);
  background-color: var(--color-light-gray);
}
.header-book-button {
  padding-inline: 26px;
  margin-right: 35px;
}
.header-burger-button {
  width: 40px;
  height: 40px;
  border-color: var(--color-light);
  background-color: transparent;
  color: var(--color-light);
  border-radius: 50%;
  border: 1px solid;
}
.visually-hidden {
  position: absolute !important;
  clip: rect(0 0 0 0) !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
}

.baner {
  color: var(--color-light);
  min-height: calc(100vh - var(--header-height));
  background-color: var(--color-dark-alternative);
  display: flex;
  flex-direction: column;
  justify-content: end;
  padding: 36px 70px;
}
.baner-body {
  text-transform: uppercase;
}
.banner-title {
  font-size: min(18.75vw, 360px);
  font-weight: 700;
  line-height: 1;
}

.banner-info {
  display: flex;
  align-items: end;
  font-size: clamp(16px, 1.56vw, 30px);
  line-height: 1.27;
  font-weight: 700;
}
.banner-info::before {
  content: "";
  width: clamp(60px, 10.1vw, 194px);
  aspect-ratio: 1;
  margin-right: 30px;
  background: url("./icons/Vector.svg") center/contain no-repeat;
}
.banner-pagination-list {
  display: flex;
  justify-content: center;
  column-gap: 14px;
  border-radius: 50%;
}
.baner-pagination-item {
  display: flex;
}
.banner-pagination-button {
  width: 10px;
  aspect-ratio: 1;
  background-color: transparent;
  border: 1px solid var(--color-light);
  border-radius: 50%;
}
.banner-pagination-button.is-current {
  background-color: var(--color-light);
}
@media (max-width: 1024px) {
  .header {
    flex-wrap: wrap;
    row-gap: 7px;
    padding-top: 10px;
    padding-inline: 17px;
  }
  .header-menu {
    order: 1;
    flex-basis: 100%;
  }
  .header-menu-link {
    height: 50px;
  }
  .header-book-button {
    margin-right: 17px;
  }
  .header-menu-list {
    gap: 35px;
    align-items: center;
    justify-content: center;
  }
  .baner {
    padding-inline: 30px;
  }
}
@media (max-width: 425px) {
  .header-menu-list {
    gap: 15px;
  }
  .header {
    padding-inline: 10px;
    column-gap: 10px;
  }
  .header-book-button {
    margin-right: 10px;
    padding-inline: 15px;
  }
  .header-logo-img {
    width: 120px;
  }
  .banner-info::before {
    margin-right: 10px;
  }
}
